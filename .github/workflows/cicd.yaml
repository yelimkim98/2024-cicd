name: Java and AWS ECS CICD
on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build-docker-image:
    #ubuntu 환경에서 수행
    runs-on: ubuntu-latest
    steps:
      #소스 코드 가져오기
      - uses: actions/checkout@v3

      #JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: 'Make Gradlew Executable'
        run: 'chmod +x ./gradlew'

      # Spring Boot Application Build
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

      # AWS 로그인
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # arn 값은 자격 증명 공급자에서 만든 role(역할)에서 찾아서 설정
          role-to-assume: arn:aws:iam::484907495106:role/cicd
          role-session-name: sampleSessionName
          aws-region: 'ap-northeast-2'


      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      #이미지를 빌드하고 ECR에 push
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
